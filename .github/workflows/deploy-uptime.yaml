name: Deploy k8s uptime container
on: [push]

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache download kubectl
        uses: actions/cache@v3
        id: "cache-kubectl"
        with:
          path: /usr/local/bin/kubectl
          key: ${{ runner.os }}-kubectl

      - name: Install kubectl
        shell: bash
        if: steps.cache-kubectl.outputs.cache-hit != 'true'
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -sSL https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install kubectl /usr/local/bin/kubectl
          kubectl version --client=true
      - uses: azure/setup-helm@v3
      - name: Unlock secrets
        uses: sliteteam/github-action-git-crypt-unlock@1.2.0
        env:
          GIT_CRYPT_KEY: ${{ secrets.GPG_PUBLIC_KEY_BLOCK }}
      - name: kubectl apply
        shell: bash
        run: >-
          find ./kubeconfigs -name "*.yaml" | while read -r file; do
            # split string by -
            IFS='-' read -ra elements <<< "$(basename $file)"
            KUBECONFIG=${file} kubectl config get-contexts 
            KUBECONFIG=${file} kubectl cluster-info
            KUBECONFIG=${file} helm repo add nginx-stable https://helm.nginx.com/stable
            KUBECONFIG=${file} helm repo update
            # digitialocean said to put  controller.publishService.enabled=true here
            KUBECONFIG=${file} helm upgrade --namespace=default --install nginx-ingress nginx-stable/nginx-ingress --set rbac.create=true --set controller.publishService.enabled=true
            KUBECONFIG=${file} helm upgrade --create-namespace --namespace=uptime-test --install --set ingress.enabled=true --set ingress.className=nginx --set ingress.hosts[0].host=${elements[0]}.yaronshani.me,ingress.hosts[0].paths[0].path=/,ingress.hosts[0].paths[0].pathType=Prefix http-server ./http-server 
          done;

      
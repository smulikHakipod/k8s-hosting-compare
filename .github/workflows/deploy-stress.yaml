# Github action to deploy stress-cpu.py to each k8s cluster

name: Deploy k8s stress container
on:
  push:
    branches: ["main"]
    paths:
      - "stress/**"
      - "kubeconfigs/**"
      - ".github/workflows/deploy-stress.yaml"

jobs:
  Deploy:
    runs-on: ubuntu-latest
    env:
      RUN_LOCAL: ${{ secrets.RUN_LOCAL }}
    steps:
      - uses: actions/checkout@v3

      - name: Cache download kubectl
        uses: actions/cache@v3
        id: "cache-kubectl"
        with:
          path: /usr/local/bin/kubectl
          key: ${{ runner.os }}-kubectl

      - name: Install kubectl
        shell: bash
        if: steps.cache-kubectl.outputs.cache-hit != 'true'
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -sSL https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install kubectl /usr/local/bin/kubectl
          kubectl version --client=true
      - uses: azure/setup-helm@v3
      - name: Unlock secrets
        if: ${{ env.RUN_LOCAL != 'true' }}
        uses: sliteteam/github-action-git-crypt-unlock@1.2.0
        env:
          GIT_CRYPT_KEY: ${{ secrets.GPG_PUBLIC_KEY_BLOCK }}
      # dockerbuild and upload to dockerhub using buildx cross platform and using yaronshani/stress:latest tag with
      # docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }} login
      # also, use qemu driver to build for arm64 x86_64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image 
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          push: true
          context: stress
          platforms: linux/amd64,linux/arm64
          provenance: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            yaronshani/stress:latest

      - name: kubectl apply
        shell: bash
        run: >-
          find ./kubeconfigs -name "*.yaml" | while read -r file; do
            # split string by -
            IFS='-' read -ra elements <<< "$(basename $file)"
            KUBECONFIG=${file} kubectl config get-contexts 
            KUBECONFIG=${file} kubectl cluster-info
            KUBECONFIG=${file} helm upgrade --create-namespace --namespace=stress-testing --install stress ./stress/helm/stress \
              --set provider=${elements[0]} \
              --set prometheus.user=admin \
              --set prometheus.password=${{ secrets.PROMETHEUS_PASSWORD }} 
          done;